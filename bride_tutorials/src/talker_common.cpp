//ROS typedefs
#include "ros/ros.h"
#include <std_msgs/String.h>

/* protected region user include files on begin */
/* protected region user include files end */

class talker_config
{
public:
		std::string word;

};

class talker_data
{
// autogenerated: don't touch this class
public:
//input data
  
	
//output data
    	std_msgs::String out_pub;
 

};

class talker_impl
{
	/* protected region user member variables on begin */
	int counter;
	bool running;
	/* protected region user member variables end */

public:
    talker_impl() 
    {
        /* protected region user constructor on begin */
	counter = 0;
	running = false;
		/* protected region user constructor end */
    }
    void configure(talker_config config) 
    {
        /* protected region user configure on begin */
		/* protected region user configure end */
    }
    void update(talker_data &data, talker_config config)
    {
        /* protected region user update on begin */
    	if(running == true)
    	{
	counter ++;
        std::stringstream ss;
        ss << config.word << " : " << counter;
        data.out_pub.data = ss.str();
    	}

	if(counter > 10)
		running = false;
		/* protected region user update end */
    }


    void callback_TriggerPublish_(const bride_tutorials::TriggerPublishGoalConstPtr &goal, actionlib::SimpleActionServer<bride_tutorials::TriggerPublishAction> *as_)
    {
    	/* protected region user implementation of action callback for TriggerPublish on begin */
	counter = 0;
	running = true;
    	while(running == true)
    		sleep(0.1);
    	as_->setSucceeded();
    	/* protected region user implementation of action callback for TriggerPublish end */
    }
    


    
    /* protected region user additional functions on begin */
	/* protected region user additional functions end */
    
};
